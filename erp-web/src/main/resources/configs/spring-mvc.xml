<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 在这里扫描Controller但是不扫描Service -->
    <context:component-scan base-package="com.isoft.erp.*" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 定义跳转的文件的前后缀,视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀,变成一个可用的url地址 -->
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <mvc:interceptors>
	    <!-- 登陆拦截器,负责拦截未登录的controller操作 -->
	    <mvc:interceptor>
	    <!-- 需要拦截的地址 -->
	    <mvc:mapping path="/**"/>
	    <!-- 需要排除拦截的地址 -->
	    <mvc:exclude-mapping path="/index.jsp"/>
	    <bean id="interceptor" class="com.isoft.erp.web.interceptor.Interceptor"/>
	    </mvc:interceptor>
    </mvc:interceptors>

    <!-- 开启注解模式 -->
    <mvc:annotation-driven/>

    <!-- 配置js,css等静态文件直接映射到对应的文件夹,不被DispatcherServlet处理mapping to WebRoot里面的静态文件位置目录location访问地址 -->
    <!-- 配置静态资源,直接映射到对应的文件夹,不被DispatcherServlet处理-->
    <mvc:resources mapping="/ui/**" location="/ui/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/easyui/**" location="/easyui/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/jsp/**" location="/jsp/"/>
    <mvc:resources mapping="/json/**" location="/json/"/>
    <!-- 按照后缀来配置,和文件夹配置结合就比较简单了 -->
    <mvc:resources location="/" mapping="/**/*.html"/>
    <mvc:resources location="/js" mapping="/**/*.js"/>
    <mvc:resources location="/css" mapping="/**/*.css"/>
    <mvc:resources location="/jsp" mapping="/**/*.jsp"/>
    <mvc:resources location="/json" mapping="/**/*.json/"/>
    <!-- 配置文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

</beans>